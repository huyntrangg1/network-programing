Server:
import java.io.*;
import java.net.*;
import java.math.BigInteger;

public class TCPServer {
    private static final int PORT = 60210; // 60abc where abc is the last 3 digits of your student ID

    public static void main(String[] args) {
        try (ServerSocket serverSocket = new ServerSocket(PORT)) {
            System.out.println("Server is listening on port " + PORT);

            while (true) {
                Socket clientSocket = serverSocket.accept();
                System.out.println("Accepted connection from client: " + clientSocket.getInetAddress());

                // Create a new thread for each client
                Thread clientHandler = new Thread(new ClientHandler(clientSocket));
                clientHandler.start();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static class ClientHandler implements Runnable {
        private Socket clientSocket;

        public ClientHandler(Socket clientSocket) {
            this.clientSocket = clientSocket;
        }

        @Override
        public void run() {
            try (BufferedReader reader = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                 PrintWriter writer = new PrintWriter(clientSocket.getOutputStream(), true)) {

                // Step 2.1
                System.out.println("Accepted connection from: " + clientSocket.getInetAddress());

                // Step 2.2
                writer.println("2001040210"); // Your [Student_ID]

                // Step 2.3
                String clientReply = reader.readLine();
                System.out.println("Received from client: " + clientReply);

                // Step 2.4
                receiveFile(clientSocket);

            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        private void receiveFile(Socket clientSocket) {
            try (InputStream inputStream = clientSocket.getInputStream();
                 FileOutputStream fileOutputStream = new FileOutputStream("C:\\NPR\\toReceive\\java.docx")) {

                byte[] buffer = new byte[4096];
                int bytesRead;

                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    fileOutputStream.write(buffer, 0, bytesRead);
                }

                System.out.println("File received successfully.");

            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}

Client:
import java.io.*;
import java.net.*;
import java.math.BigInteger;

public class TCPClient {
    private static final int PORT = 60210; // 60abc where abc is the last 3 digits of your student ID

    public static void main(String[] args) {
        try (Socket socket = new Socket("localhost", PORT);
             BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
             PrintWriter writer = new PrintWriter(socket.getOutputStream(), true)) {

            // Step 2
            String serverMessage = reader.readLine();
            System.out.println("Received from server: " + serverMessage);

            // Step 3
            BigInteger studentIdCube = new BigInteger(serverMessage).pow(3);
            writer.println(studentIdCube.toString());

            // Step 4
            sendFile(socket);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void sendFile(Socket socket) {
        try (OutputStream outputStream = socket.getOutputStream();
             FileInputStream fileInputStream = new FileInputStream("C:\\NPR\\toSend\\java.docx")) {

            byte[] buffer = new byte[4096];
            int bytesRead;

            while ((bytesRead = fileInputStream.read(buffer)) != -1) {
                outputStream.write(buffer, 0, bytesRead);
            }

            System.out.println("File sent successfully.");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
